#
# WM independent
#

# Reload sxhkdrc
super + Escape
    pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'

# Make a screenshot with the selection area
Print
    maim -s | xclip -selection clipboard -t image/png; notify-send 'System' 'Screenshot was taken'

# Make a screenshot of the selected window
alt + Print
    maim | xclip -selection clipboard -t image/png

# Terminal emulator
super + Return
    kitty

# Program launcher
super + @space
    rofi -show drun

# Lock screen
super + b
    betterlockscreen -l blur

# Mute the micro
super + m
    amixer set Capture toggle

# Play/Next/Prev player control
XF86Audio{Play,Next,Prev}
    playerctl {play-pause,next,previous}

# Mute the sound
XF86AudioMute
    pactl set-sink-mute @DEFAULT_SINK@ toggle; \
    notify-send -u low -t 1000 -i audio-volume-muted "Muted"

# Turn the volume down
XF86AudioLowerVolume
    pactl set-sink-volume @DEFAULT_SINK@ -5%; \
    notify-send -u low -t 1000 -i audio-volume-low "Volume: $(pactl list sinks | grep '^[[:space:]]Volume:' | head -n2 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')"

# Turn the volume up
XF86AudioRaiseVolume
    pactl set-sink-volume @DEFAULT_SINK@ +5%; \
    notify-send -u low -t 1000 -i audio-volume-high "Volume: $(pactl list sinks | grep '^[[:space:]]Volume:' | head -n2 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')"



#
# BSPWM
#

# Quit/restart BSPWM
super + alt + {q,r}
    bspc {quit,wm -r}

# Close/kill active node
super + {_,shift + }w
    bspc node -{c,k}

# Send a node to the given desktop
super + shift + {1-9,0}
    bspc node -d '{1-9,10}'

# Focus to the given desktop or back and forth
super + {1-9,0}
    desktop='{1-9,10}'; \
    bspc query -D -d "$desktop.focused" && bspc desktop -f last || bspc desktop -f "$desktop"

# Smart resize, will grow or shrink depending on location.
# Will always grow for floating nodes. (TODO)
super + r : {h,j,k,l}
  n=20; \
  { d1=left;   d2=right;  dx=-$n; dy=0;   \
  , d1=bottom; d2=top;    dx=0;   dy=$n;  \
  , d1=top;    d2=bottom; dx=0;   dy=-$n; \
  , d1=right;  d2=left;   dx=$n;  dy=0;   \
  } \
  bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# Move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}

# Change layout of a desktop
super + alt + l : {t,T,w,W,g,G,e,t,m}
    bsp-layout set {tiled,rtiled,wide,rwide,grid,rgrid,even,tiled,monocle}

# Send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# Preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# Preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# Cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# Cancel the preselection for the focused desktop
super + ctrl + shift + space
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# Set the window state
super + {t,shift + t,s,f}
    bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# Set the node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

# Focus the node in the given direction
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# Focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# Focus the next/previous window in the current desktop
super + {_,shift + }c
    bspc node -f {next,prev}.local.!hidden.window

# Focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

# Focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# Focus the last node/desktop in the current monitor
alt + {_,shift + }Tab
    bspc node @/ -C {forward,backward}

# Focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

